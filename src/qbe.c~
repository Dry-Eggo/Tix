#include "qbe.h"
#include "internals.h"


void qbe_generate(Qbe_State* state) {
  list_NERO_Inst* program = state->program;
  int max = program->count;
  int i = 0;
  while (i < max) {
    NERO_Inst* instruction = list_NERO_Inst_get(program, i);
    switch(instruction->opcode) {
      
    }
  }
}


void qbe_compile(list_NERO_Inst* instructions, char** source, BuildOptions* opts) {
  Qbe_State* state = NEW(Qbe_State);
  state->options = opts;
  SB_init(&state->output);
  state->program = instructions;
  state->tmp_counter = 0;

  qbe_generate(state);
  
}

const char* qbe_new_tmp(Qbe_State* state) {
  char buf[16] = {0};
  sprintf(buf, "%%t%d", state->tmp_counter++);
  return strdup(buf);
}
